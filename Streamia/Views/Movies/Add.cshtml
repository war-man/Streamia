@model Movie
@{
    ViewData["Title"] = "Add Movie";
}

<div class="card">
    <div class="content">
        <form method="post">
            <input type="hidden" asp-for="ServerId" />

            <h4 class="text-info"><i class="fas fa-sliders-h"></i> Main Information</h4>

            <div class="row">

                <div class="col-md-6">
                    <label asp-for="CategoryId"></label>
                    <select asp-for="CategoryId" asp-items="@(new SelectList(ViewBag.Categories,"Id","Name"))" class="form-control">
                    </select>
                    <span class="text-danger" asp-validation-for="CategoryId"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="TranscodeId"></label>
                    <select class="form-control" asp-for="TranscodeId" asp-items="@(new SelectList(ViewBag.TranscodeProfiles, "Id", "Name"))">
                        <option value="0" selected>Stream Directly (No Processing)</option>
                    </select>
                    <span class="text-danger" asp-validation-for="TranscodeId"></span>
                </div>

            </div>

            <div class="row">

                <div class="col-md-6">
                    <label asp-for="BouquetIds"></label>
                    <select asp-for="BouquetIds" asp-items="@(new SelectList(ViewBag.Bouquets,"Id","Name"))" class="form-control" multiple></select>
                    <span class="text-danger" asp-validation-for="BouquetIds"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="ServerIds"></label>
                    <select asp-for="ServerIds" asp-items="@(new SelectList(ViewBag.Servers,"Id","Name"))" class="form-control" multiple></select>
                    <span class="text-danger" asp-validation-for="ServerIds"></span>
                </div>

            </div>

            <div class="row">

                <div class="col-md-12">
                    <label asp-for="Source"></label>
                    <div class="exploriable">
                        <input asp-for="Source" class="form-control" placeholder="URL or browse servers" />
                        <button type="button" class="btn btn-primary" onclick="exploreia.open()">
                            <i class="fa fa-folder-open"></i>
                        </button>
                    </div>
                    <span class="text-danger" asp-validation-for="Source"></span>
                </div>

            </div>

            <hr />

            <h4 class="text-info"><i class="fas fa-info-circle"></i> Movie Data (TMDB Fetched)</h4>

            <div class="row">

                <div class="form-group col-md-4">
                    <label asp-for="Name"></label>
                    <div id="searchia">
                        <input asp-for="Name" class="form-control" autocomplete="off" />
                    </div>
                    <span class="text-danger" asp-validation-for="Name"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="PosterUrl"></label>
                    <input asp-for="PosterUrl" class="form-control" />
                    <span class="text-danger" asp-validation-for="PosterUrl"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Overview"></label>
                    <input asp-for="Overview" class="form-control" />
                    <span class="text-danger" asp-validation-for="Overview"></span>
                </div>

            </div>

            <div class="row">

                <div class="form-group col-md-4">
                    <label asp-for="Cast"></label>
                    <input asp-for="Cast" class="form-control" />
                    <span class="text-danger" asp-validation-for="Cast"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Director"></label>
                    <input asp-for="Director" class="form-control" />
                    <span class="text-danger" asp-validation-for="Director"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Gener"></label>
                    <input asp-for="Gener" class="form-control" />
                    <span class="text-danger" asp-validation-for="Gener"></span>
                </div>

            </div>

            <div class="row">

                <div class="form-group col-md-4">
                    <label asp-for="ReleaseDate"></label>
                    <input asp-for="ReleaseDate" class="form-control" />
                    <span class="text-danger" asp-validation-for="ReleaseDate"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Runtime"></label>
                    <input asp-for="Runtime" class="form-control" />
                    <span class="text-danger" asp-validation-for="Runtime"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Rating"></label>
                    <input asp-for="Rating" class="form-control" />
                    <span class="text-danger" asp-validation-for="Rating"></span>
                </div>

            </div>

            <hr />

            <button class="btn btn-success btn-fill">
                <i class="fas fa-check"></i> Add
            </button>

        </form>
    </div>
</div>


@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/Searchia.js" asp-append-version="true"></script>
    <script src="~/js/TMDB.js" asp-append-version="true"></script>
    <script src="~/js/Exploreia.js" asp-append-version="true"></script>
    <script>
        const searchia = new Searchia();
        const tmdb = new TMDB('415e9238d5188172426c3858b367e468');

        searchia.onTyping(value => {
            tmdb.search(value, 'movie', response => {
                response.results.forEach(result => {
                    searchia.onResult(result.id, `${result.title} (${result.release_date ? result.release_date.split('-')[0] : ''})`);
                });
            });
        });

        searchia.onResultClick(id => {
            tmdb.find(`movie/${id}`, 'credits', response => {
                let genres = [];
                let cast = [];
                let director = null;
                response.genres.forEach(genre => {
                    genres.push(genre.name);
                });
                response.credits.cast.forEach(credit => {
                    cast.push(credit.name);
                });
                for (let person of response.credits.crew) {
                    if (person.department === "Directing") {
                        director = person.name;
                        break;
                    }
                }
                $('#Name').val(response.title);
                $('#PosterUrl').val(tmdb.generatePosterUrl(response.poster_path));
                $('#Overview').val(response.overview);
                $('#Rating').val(response.vote_average);
                $('#Runtime').val(response.runtime);
                $('#Gener').val(genres.join(','));
                $('#Cast').val(cast.join(','));
                $('#ReleaseDate').val(response.release_date);
                $('#Director').val(director);
            });
        });

        const exploreia = new Exploreia({
            pickFile: true
        });

        exploreia.render(@Html.Raw(Json.Serialize(ViewBag.Servers)));

        const connection = new signalR.HubConnectionBuilder().withUrl("/directory-browser-hub").build();
        connection.start();

        connection.on('DirectoryList', data => {
            exploreia.renderDirectories(data.directoryList);
        });

        exploreia.onChange((server, path) => {
            connection.invoke('ListServerDirectory', server, path).catch(() => {
                exploreia.onError();
            });
        });

        exploreia.onFilePick(file => {
            $('#ServerId').val(exploreia.currentServer);
            $('#Source').val(file);
            exploreia.close();
            exploreia.resetAll();
            connection.invoke('DisposeConnection', exploreia.currentServer).catch(() => {
                exploreia.onError();
            });
        });

        exploreia.onDispose(server => {
            connection.invoke('DisposeConnection', server).catch(() => {
                exploreia.onError();
            });
        });
    </script>
}