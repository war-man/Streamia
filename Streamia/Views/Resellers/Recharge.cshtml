@model Streamia.Models.ViewModels.RechargeViewModel
@{
    ViewData["Title"] = "Recharge Credit";
    ViewData["DisableSearch"] = string.Empty;
    ViewData["DisableNavigation"] = string.Empty;
}

@section Styles{ 
    <style>
        #paypal-button-container {
            width: 130px
        }
    </style>
}

<div class="card">
    <div class="content">
        <span class="label label-default">Price per 1 point: <strong>$@Model.Setting.PointPrice.ToString("0.0")</strong></span>
        <hr />
        <div class="payment-container">
            <div class="alert alert-success" style="display:none">
                <i class="fas fa-check"></i> You have successfully recharged your credit, Please wait while finalizing payment... <i class="fas fa-hourglass-half"></i>
            </div>
            <div class="payment-loader text-center">
                <i class="fa fa-fw fa-spinner fa-3x fa-pulse text-primary"></i>
            </div>
            <form method="post" id="recharge-form">
                <input type="hidden" asp-for="TransactionId" id="TransactionId" />
                <div class="form-group">
                    <label asp-for="Points"></label>
                    <input asp-for="Points" class="form-control" />
                    <span class="text-danger" asp-validation-for="Points"></span>
                </div>
            </form>
            <div id="paypal-button-container"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=@Model.Setting.PayPalClientId"></script>
    <script>
        const rate = @Model.Setting.PointPrice;
        function toggleLoader(shouldShow) {
            let loader = document.querySelector('.payment-loader');
            let display = 'none';
            if (shouldShow) {
                display = 'block';
            }
            loader.style.display = display;
        }
        paypal.Buttons({
            commit: true,
            createOrder: function (data, actions) {
                toggleLoader(true);
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: (rate * document.getElementById("Points").value)
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    document.querySelector('.alert').style.display = 'block';
                    document.getElementById('TransactionId').value = details["purchase_units"][0]["payments"]["captures"][0]["id"];
                    document.getElementById('recharge-form').submit();
                });
            },
            onError: function (err) {
                toggleLoader(false);
                alert("Points should be at least 1 point");
            },
            onCancel: function (data, actions) {
                toggleLoader(false);
                alert("Payment has been cancelled");
            },
            style: {
                layout: "horizontal",
                color: 'blue',
                shape: 'rect',
                label: 'pay',
                height: 40
            }
        }).render('#paypal-button-container');
    </script>
}
